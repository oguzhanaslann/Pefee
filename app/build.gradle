plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.oguzhanaslann.pefee"
        minSdk rootProject.minSDK
        targetSdk rootProject.targetSDK
        versionCode rootProject.versionCodeMajor * 100 + rootProject.versionCodeMedium * 10 + rootProject.versionCodeMinor * 1
        versionName  "${rootProject.versionCodeMajor}.${rootProject.versionCodeMedium}.${rootProject.versionCodeMinor}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }


    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
        animationsDisabled = true
    }


    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'

    // Room
    implementation("androidx.room:room-runtime:$rootProject.room_version")
    annotationProcessor "androidx.room:room-compiler:$rootProject.room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$rootProject.room_version")

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$rootProject.room_version")


    def nav_version = "2.3.5"
    // Navigation Components
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    def fragment_version = "1.3.6"
    // Kotlin
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    implementation "com.airbnb.android:lottie:$rootProject.lottieVersion"


    // circular imageView
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //coil
    implementation("io.coil-kt:coil:1.3.0")

    // coroutines
    def coroutines_version = "1.4.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"



    def lifecycle_version = "2.3.1"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"


    testImplementation 'junit:junit:4.13.2'
    testImplementation("androidx.room:room-testing:$rootProject.room_version")
    testImplementation 'org.mockito:mockito-core:3.1.0'
    testImplementation "androidx.test.espresso:espresso-core:3.4.0"
    testImplementation "org.robolectric:robolectric:4.5.1"
    testImplementation "com.google.truth:truth:1.0.1"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0'

    // optional - Test helpers for LiveData
    def arch_version = "2.1.0"
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation 'androidx.test:core:1.4.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'



    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    // Core library
    androidTestImplementation 'androidx.test:core:1.4.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'

    // Assertions
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.ext:truth:1.4.0'
    androidTestImplementation 'com.google.truth:truth:1.0.1'

    // Espresso dependencies
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.4.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.4.0'

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.4.0'


    androidTestImplementation "androidx.arch.core:core-testing:$arch_version"

    //kakao
    androidTestImplementation 'com.agoda.kakao:kakao:2.1.0'
    // mockito for android testing
    androidTestImplementation 'org.mockito:mockito-core:3.1.0'

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

}